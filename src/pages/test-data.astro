---
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <main class="container max-w-6xl mx-auto p-4">
    <h2 class="text-3xl font-bold tracking-tight mb-6 text-center">
      Test Supabase Data Fetch
    </h2>

    <div class="bg-white p-6 rounded-lg shadow-md mb-8">
      <div id="loading-indicator" class="py-8 flex justify-center">
        <div class="flex items-center justify-center space-x-2">
          <div class="w-4 h-4 bg-indigo-600 rounded-full animate-pulse"></div>
          <div class="w-4 h-4 bg-indigo-600 rounded-full animate-pulse delay-75"></div>
          <div class="w-4 h-4 bg-indigo-600 rounded-full animate-pulse delay-150"></div>
        </div>
        <p class="ml-3 text-gray-600">Loading data...</p>
      </div>

      <div id="data-container" class="hidden">
        <h3 class="text-xl font-semibold mb-4">BIF Entries (5 records)</h3>
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr id="table-headers">
                <!-- Headers will be populated dynamically -->
              </tr>
            </thead>
            <tbody id="table-body" class="bg-white divide-y divide-gray-200">
              <!-- Data rows will be populated dynamically -->
            </tbody>
          </table>
        </div>
      </div>

      <div id="error-container" class="hidden py-8 text-center">
        <svg class="w-16 h-16 text-red-500 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        <h3 class="text-lg font-medium text-gray-900 mb-2">Error Loading Data</h3>
        <p id="error-message" class="text-red-600 mb-4">Unable to fetch data from Supabase</p>
        <pre id="error-details" class="text-left bg-gray-100 p-4 rounded-md overflow-x-auto text-sm"></pre>
      </div>
    </div>
  </main>
</Layout>

<script>
  import { supabase } from '../lib/supabase.js';

  document.addEventListener('DOMContentLoaded', async () => {
    const loadingIndicator = document.getElementById('loading-indicator');
    const dataContainer = document.getElementById('data-container');
    const errorContainer = document.getElementById('error-container');
    const errorMessage = document.getElementById('error-message');
    const errorDetails = document.getElementById('error-details');
    const tableHeaders = document.getElementById('table-headers');
    const tableBody = document.getElementById('table-body');

    // Function to fetch data from Supabase
    const fetchData = async () => {
      try {
        // Fetch 5 records from the bif_entries table
        const { data, error } = await supabase
          .from('bif_entries')
          .select('*')
          .limit(5);

        if (error) {
          throw error;
        }

        // Hide loading indicator
        if (loadingIndicator) loadingIndicator.classList.add('hidden');
        
        if (data && data.length > 0) {
          // Show data container
          if (dataContainer) dataContainer.classList.remove('hidden');
          
          // Create table headers based on the first record's keys
          if (tableHeaders) {
            const headerRow = Object.keys(data[0]).map(key => 
              `<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">${key}</th>`
            ).join('');
            tableHeaders.innerHTML = headerRow;
          }
          
          // Create table rows for each record
          if (tableBody) {
            const rows = data.map(record => {
              const cells = Object.values(record).map(value => 
                `<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${value !== null ? value : 'null'}</td>`
              ).join('');
              return `<tr>${cells}</tr>`;
            }).join('');
            tableBody.innerHTML = rows;
          }
        } else {
          // No data found
          throw new Error('No records found in the bif_entries table');
        }
      } catch (err) {
        console.error('Error fetching data:', err);
        
        // Hide loading indicator
        if (loadingIndicator) loadingIndicator.classList.add('hidden');
        
        // Show error container
        if (errorContainer) errorContainer.classList.remove('hidden');
        
        // Display error message
        if (errorMessage) errorMessage.textContent = err.message || 'Error fetching data from Supabase';
        
        // Display detailed error information
        if (errorDetails) {
          const errDetails = {
            message: err.message,
            code: err.code,
            details: err.details,
            hint: err.hint
          };
          errorDetails.textContent = JSON.stringify(errDetails, null, 2);
        }
      }
    };

    // Fetch data when the page loads
    fetchData();
  });
</script>
